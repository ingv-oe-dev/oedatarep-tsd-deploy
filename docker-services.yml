version: '2.2'
services:
  app:
    build:
      context: ./oedatarep-invenio-rdm
      args:
        - ENVIRONMENT=DEV
        - OEDATAREP_RELEASE=v0.1.2rc
    image: oedatarep-invenio-rdm
    restart: "unless-stopped"
    environment:
      # - "INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://${BACKEND_SVC_HOST}:6379/1"
      # - "INVENIO_BROKER_URL=amqp://guest:guest@${BACKEND_SVC_HOST}:5672/"
      # - "INVENIO_CACHE_REDIS_URL=redis://${BACKEND_SVC_HOST}:6379/0"
      # - "INVENIO_CACHE_TYPE=redis"
      # - "INVENIO_CELERY_BROKER_URL=amqp://guest:guest@${BACKEND_SVC_HOST}:5672/"
      # - "INVENIO_CELERY_RESULT_BACKEND=redis://${BACKEND_SVC_HOST}:6379/2"
      # - "INVENIO_SEARCH_ELASTIC_HOSTS=['${BACKEND_SVC_HOST}:9200']"
      # - "INVENIO_SECRET_KEY=CHANGE_ME"
      # - "INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://oedatarep-invenio-rdm:oedatarep-invenio-rdm@${BACKEND_SVC_HOST}/oedatarep-invenio-rdm"
      # - "INVENIO_WSGI_PROXIES=2"
      # - "INVENIO_RATELIMIT_STORAGE_URL=redis://${BACKEND_SVC_HOST}:6379/3"
      - "INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1"
      - "INVENIO_BROKER_URL=amqp://guest:guest@mq:5672/"
      - "INVENIO_CACHE_REDIS_URL=redis://cache:6379/0"
      - "INVENIO_CACHE_TYPE=redis"
      - "INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672/"
      - "INVENIO_CELERY_RESULT_BACKEND=redis://cache:6379/2"
      - "INVENIO_SEARCH_ELASTIC_HOSTS=['es:9200']"
      - "INVENIO_SECRET_KEY=CHANGE_ME"
      - "INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://oedatarep-invenio-rdm:oedatarep-invenio-rdm@db/oedatarep-invenio-rdm"
      - "INVENIO_WSGI_PROXIES=2"
      - "INVENIO_RATELIMIT_STORAGE_URL=redis://cache:6379/3"
  frontend:
    build: 
      context: docker/nginx/
    image: oedatarep-invenio-rdm-frontend
    restart: "unless-stopped"
    ports:
      - "80"
      - "443"
  db:
    build:
      context: docker/timescale/
    restart: always
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    ports:
      - "5432:5432"
  pgadmin:
    image: dpage/pgadmin4:5.2
    restart: "unless-stopped"
    ports:
      - "5050:80"
      - "5051:443"
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_PASSWORD}"
    volumes:
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
  tsd:
    build:
      context: tsdsystem/docker/php/
    image: tsd
    tty: true
    # depends_on:
    #   - db
    environment:
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      DB_USER: "${TSD_DB_USER}"
      DB_PASSWORD: "${TSD_DB_PASSWORD}"
      DB_NAME: "${TSD_DB}"
      SERVER_KEY: "${SERVER_KEY}"
      APP_ALLOWED_HOSTS: "${APP_ALLOWED_HOSTS}"
    ports:
      - "8000:80"
    working_dir: /var/www/html/tsdws
    volumes:
      - ./tsdsystem/src:/var/www/html 